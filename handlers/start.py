from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from keyboards import get_main_menu, get_back_button
from logger_config import log_user, log_bot, log_error

router = Router()

@router.message(Command("start"))
async def start_handler(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username
    
    log_user(user_id, username, "–í—ã–ø–æ–ª–Ω–∏–ª –∫–æ–º–∞–Ω–¥—É /start")

    welcome_text = (
        f"üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ RAWGbot, {message.from_user.first_name}!\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–∞—Ö, –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∏–≥—Ä –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:"
    )

    await message.answer(welcome_text, reply_markup=get_main_menu())

    log_bot(user_id, welcome_text)

@router.message(Command("help"))
async def help_commnad(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username

    log_user(user_id, username, "–í—ã–ø–æ–ª–Ω–∏–ª –∫–æ–º–∞–Ω–¥—É /help")

    help_text = (
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n"
        "/search [–Ω–∞–∑–≤–∞–Ω–∏–µ] - –ü–æ–∏—Å–∫ –∏–≥—Ä—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n"
        "/popular - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–≥—Ä—ã\n"
        "/random - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∏–≥—Ä—É\n\n"
        "–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"
        )

    await message.answer(help_text, reply_markup=get_back_button())

    log_bot(user_id, help_text)

@router.callback_query(F.data == 'help')
async def help_callback(callback: CallbackQuery):
    user_id = callback.from_user.id
    username = callback.from_user.username

    log_user(user_id, username, "–ù–∞–∂–∞–ª –Ω–∞ –∫–Ω–ø–æ–∫—É '–ü–æ–º–æ—â—å'")

    help_text = (
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n"
        "/start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n"
        "/search [–Ω–∞–∑–≤–∞–Ω–∏–µ] - –ü–æ–∏—Å–∫ –∏–≥—Ä—ã –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\n"
        "/popular - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∏–≥—Ä—ã\n"
        "/random - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ª—É—á–∞–π–Ω—É—é –∏–≥—Ä—É\n\n"
        "–¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –≤ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"
        )

    await callback.message.edit_text(help_text, reply_markup=get_back_button())

    log_bot(user_id, help_text)

@router.callback_query(F.data == 'back_to_menu')
async def back_to_menu(callback: CallbackQuery):
    user_id = callback.from_user.id
    username = callback.from_user.username

    log_user(user_id, username, "–í–µ—Ä–Ω—É–ª—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")

    welcome_text = (
        "üéÆ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é GameBot\n\n"
        "–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –∏ –≥–∏–¥ –≤ –±–µ–∑–≥—Ä–∞–Ω–∏—á–Ω–æ–º –º–∏—Ä–µ –≤–∏–¥–µ–æ–∏–≥—Ä!\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
    )

    try:
        await callback.message.delete()
        await callback.message.answer(
            welcome_text, 
            reply_markup=get_main_menu()
        )

        log_bot(user_id, welcome_text)
        
    except Exception as e:
        log_error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {str(e)}")
        await callback.message.answer(
            welcome_text, 
            reply_markup=get_main_menu()
        )
